# geany use both C and C++, so advertize C++
language: cpp
dist: trusty
sudo: required
compiler:
  - gcc

git:
  quiet: true

addons:
  apt:
    packages:
      - intltool
      - libtool
      - libgtk-3-dev
      - python-docutils
      - rst2pdf
      - python-lxml
 
#install:
  # try not to install doxygen-latex because we don't need it and it's huge
  #- sudo apt-get install -y --no-install-recommends doxygen

before_script:
  #- export CFLAGS="-g -O2 -Werror=pointer-arith -Werror=implicit-function-declaration"
  - export APP=geany
  - export LOWERAPP=${APP,,}
  - URL=$(wget --quiet "http://download.geany.org/" -O - | grep -e "geany-.*\.tar\.gz<" | tail -n 1 | cut -d '"' -f 2)
  - export VERSION=$(echo "$URL" | sed -r 's/.*geany-(.*).tar.gz/\1/')
  - wget -c "http://download.geany.org/$URL"
  - tar xvf "${APP}-${VERSION}.tar.gz"

script:
  - pushd "geany-${VERSION}"
  - ./configure --enable-gtk3=yes --enable-binreloc
  - make -j$(nproc)
  - make -j$(nproc) check
  - sudo make install
  - popd

after_success:
  #- wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  #- bash upload.sh geany-"$ARCH".AppImage*
  - wget -q https://github.com/AppImage/AppImages/raw/master/functions.sh
  - source ./functions.sh
  #=== copy the list of libraries that have to be excluded from the bundle
  - export APPDIR="$(pwd)/${APP}.AppDir"
  - (rm --recursive --force --verbose "${APPDIR}" && mkdir --parents --verbose "${APPDIR}/usr/bin") || exit 1
  #- cp /sources/appimage-helper-scripts/excludelist "${APPROOT}"
  #=== Copying GIMP executable and desktop file
  - cp --archive --verbose /usr/local/bin/geany* "${APPDIR}/usr/bin" || exit 1
  - cp --archive --verbose /usr/local/share/applications/${APP}* "${APPDIR}/usr/share/applications" || exit 1
  #=== Copying GIMP icon
  - pushd /usr/local/share/icons/hicolor
  - for f in *; do
  -   echo "f: \"$f\""
  -   ls $f/apps/$LOWERAPP.png
  -   if [ -e $f/apps/$LOWERAPP.png ]; then
  -     mkdir -p "$APPDIR/usr/share/icons/hicolor/$f/apps" || exit 1
  -     cp $f/apps/$LOWERAPP.png "$APPDIR/usr/share/icons/hicolor/$f/apps" || exit 1
  -   fi
  - done
  - popd
  #=== 
  - pushd "${APPDIR}"
  #Copy dependencies : Three runs to ensure we catch indirect ones
  - copy_deps
  - copy_deps
  - copy_deps
  #Remove unneeded libraries
  - delete_blacklisted
  #Put the gcc libraries in optional folders
  #- copy_gcc_libs
  #Copy the startup scripts
  #- cp -a /sources/AppRun.sh "$APPDIR/AppRun" || exit 1
  #- cp /sources/appimage-helper-scripts/apprun-helper.sh "$APPDIR/apprun-helper.sh" || exit 1
  #Bundle the desktop file and application icon
  - get_desktop || exit 1
  - get_icon || exit 1
  #Configure the desktop integration
  - get_desktopintegration $LOWERAPP
  - popd
  #=== Building AppImage...
  - rm -rf ../out
  - export ARCH="x86_64"
  - export NO_GLIBC_VERSION=true
  #- export DOCKER_BUILD=true
  - generate_type2_appimage || exit 1
  - mkdir -p /sources/out
  - cp -a --verbose ../out/*.AppImage /sources/out
  #/${APP}-${VERSION}-${ARCH}.AppImage

#deploy:
#  provider: releases
#  api_key: $GITHUB_TOKEN
#  file: "FILE TO UPLOAD"
#  skip_cleanup: true
#  on:
#    tags: true
